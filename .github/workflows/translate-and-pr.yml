name: Translate and PR

on:
  workflow_dispatch:

jobs:
  translate:
    runs-on: ubuntu-latest
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

    steps:
      - uses: actions/checkout@v3

      - name: Read changed files and extract newsletter number
        id: extract
        run: |
          file=$(cat .ghcache/changed.txt | head -n 1)
          number=$(grep -m 1 'title:' "$file" | grep -o '#[0-9]*' | tr -d '#')
          echo "number=$number" >> $GITHUB_ENV
          echo "file=$file" >> $GITHUB_ENV

      - name: Create d1 and d2 branches
        run: |
          git fetch origin
          git checkout -b newsletter${{ env.number }}d1 origin/master
          git checkout -b newsletter${{ env.number }}d2 origin/master

      - name: Translate files
        run: |
          IFS=$'\n'
          for file in $(cat .ghcache/changed.txt); do
            content=$(awk 'BEGIN{print "Translate this file into Chinese, keeping the original markdown format. And can take other files as format references.
Here is a common professional vocabulary correspondence table (English -> Chinese):
  * anchor outputs -> 锚点输出
  * Bitcoin -> 比特币
  * Bitcoin Core -> Bitcoin Core
  * channel -> 通道
  * channel funding -> 通道注资
  * cluster -> 族群
  * compact block -> 致密区块
  * covenant -> 限制条款
  * ephemeral anchors -> 临时锚点
  * fee -> 手续费
  * fee deficit -> 手续费赤字
  * LN -> 闪电网络
  * malleability -> 熔融性
  * mempool -> 交易池
  * newsletter -> 周报
  * offer -> 要约
  * peer -> 对等节点
  * preimage -> 原像
  * Replace-By-Fee -> 手续费替换
  * rollup -> rollup
  * sats -> sats
  * settle -> 结算
  * sign -> 签名
  * signet -> signet
  * spender -> 花费者
  * transaction pinning attacks -> 交易钉死攻击
  * withdrawal -> 取款
  * zero conf -> 零确认
  * gossip -> gossip"} {print}' "$file" | jq -Rs .)
            body='{"model":"gpt-4","messages":[{"role":"system","content":"你是一个技术文档翻译器，保留markdown结构和YAML frontmatter格式。"},{"role":"user","content":'"$content"'}]}'
            response=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d "$body")
            echo "$response" | jq -r .choices[0].message.content > "$file"
          done

      - name: Commit translation
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add _posts/en/newsletters/
          git commit -m "Auto-translate: new newsletter"
          git push origin newsletter${{ env.number }}d2

      - name: Create PR to d1
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: newsletter${{ env.number }}d1
          head: newsletter${{ env.number }}d2
          title: "[Auto] Translated Newsletter #${{ env.number }}"
          body: "请审核自动翻译内容。"